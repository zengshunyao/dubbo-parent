<?xml version="1.0" encoding="UTF-8"?>
<!-- 添加 DUBBO SCHEMA -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!--当前项目在整个分布式架构里面的唯一名称，计算依赖关系的标签-->
    <dubbo:application name="order-provider" owner="bug"/>

    <!--dubbo这个服务所要暴露的服务地址所对应的注册中心-->
    <!--<dubbo:registry address="N/A"/>-->
    <!--<dubbo:registry-->
    <!--home-->
    <!--address="zookeeper://192.168.137.101:2181?backup=192.168.137.102:2181,192.168.137.103:2181,192.168.137.104:2181"/>-->
    <!--公司-->
    <dubbo:registry address="zookeeper://47.52.33.73:2181"/>

    <!--当前服务发布所依赖的协议：webservice,Thrift,Hession,Http-->
    <dubbo:protocol name="dubbo" port="20880"/>

    <!--增加hessian协议-->
    <dubbo:protocol name="hessian" port="8090"/>

    <!--生成一个远程服务的调用代理-->
    <dubbo:reference id="orderService" interface="com.funi.distributedcomputer.dubbo.order.IOrderService"
                     check="false"
                     protocol="hessian"
                     version="1.0"/>
    <!--生成一个远程服务的调用代理-->
    <dubbo:reference id="orderService2" interface="com.funi.distributedcomputer.dubbo.order.IOrderService"
                     check="false"
                     protocol="dubbo"
                     version="2.0">
        <dubbo:method name="doOrder" async="true"/>
    </dubbo:reference>
</beans>